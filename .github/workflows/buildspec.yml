on:
  push:
    branches: [ main ]

env:
  ECR_REGISTRY: https://244740641779.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: testingdockerimage
  
name: STAGE TO PROD IMAGE REPLICATION

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_TOKEN}}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to SRC Amazon ECR Repo
      id: build-image-src
      env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: testingdockerimage
          IMAGE_TAG: ${{ github.sha }}
          AWS_REGION: us-east-1
      run: |
        echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" 
        ls -la
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY/$IMAGE_TAG:stage -t $ECR_REGISTRY/$ECR_REPOSITORY/$IMAGE_TAG:prod .
        docker images
        docker push $ECR_REGISTRY/$ECR_REPOSITORY/$IMAGE_TAG:stage
        docker push $ECR_REGISTRY/$ECR_REPOSITORY/$IMAGE_TAG:prod
        echo "Pushing image to ECR"
        
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
  
    steps:
     - name: Check out code
       uses: actions/checkout@v2

     - name: Sync ArgoCD App
       run: |
          argocd --insecure app sync ${{ secrets.ARGOCD_TOKEN }}
          echo "Replicating iamge from Stage to Prod"
