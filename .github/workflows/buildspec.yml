on:
  push:
    branches: [ main ]

env:
  ECR_REGISTRY: https://244740641779.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: feature2361
  
name: STAGE TO PROD IMAGE REPLICATION

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_TOKEN }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to SRC Amazon ECR Repo
      id: build-image
      env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: feature2361
          IMAGE_TAG: ${{ github.sha }}
          AWS_REGION: us-east-1
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:stage -t $ECR_REGISTRY/$ECR_REPOSITORY:prod .
        docker push -a $ECR_REGISTRY/$ECR_REPOSITORY 
        echo "Pushing image to ECR repo."
        
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
  
    steps:
     - name: Check out code
       uses: actions/checkout@v2
       
     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-session-token: ${{ secrets.AWS_TOKEN }}
         aws-region: us-east-1
      
     - name: Connect to your cluster
       run: |
          aws eks --region us-east-1 update-kubeconfig --name MetronetPocArgocd
          echo "Connected to your cluster!"
      
     
    # - name: Deploy app to cluster and sync to ArgoCD
     #  run: |
      #    argocd login  a867a311ffe544ac885bb44c65c553b2-70831757.us-east-1.elb.amazonaws.com --username admin --password WIoTYBjjxXf1bCt4
       #   argocd app create web2 --repo https://github.com/tanvinaxane/testingECR.git --path "." --project ecrtesting1 --dest-server https://C7670FF6497552BFBC7284EBD87B1B2F.gr7.us-east-1.eks.amazonaws.com --dest-namespace stagetoprodst
        #  argocd app sync web2
      
     - name: Sync app to ArgoCD Application
       uses: gnat-service/argocd-action@v1.0.2
       with:
        #files: 'argocdSync/app.yml' 
        address: "http://a867a311ffe544ac885bb44c65c553b2-230721572.us-east-1.elb.amazonaws.com"
        token: ${{ secrets.ARGOCD_TOKEN }}
        insecure: true
        appName: "web"
        
